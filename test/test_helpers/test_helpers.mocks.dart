// Mocks generated by Mockito 5.4.1 from annotations
// in cartisan/test/test_helpers/test_helpers.dart.
// Do not manually edit this file.

// @dart=2.19

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:cartisan/app/api_classes/api_service.dart' as _i4;
import 'package:cartisan/app/api_classes/post_api.dart' as _i8;
import 'package:cartisan/app/controllers/auth_service.dart' as _i6;
import 'package:cartisan/app/models/comment_model.dart' as _i11;
import 'package:cartisan/app/models/post_model.dart' as _i10;
import 'package:cartisan/app/models/post_response.dart' as _i12;
import 'package:cartisan/app/models/review_model.dart' as _i9;
import 'package:dio/dio.dart' as _i2;
import 'package:firebase_auth/firebase_auth.dart' as _i7;
import 'package:get/get.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDio_0 extends _i1.SmartFake implements _i2.Dio {
  _FakeDio_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_1<T1> extends _i1.SmartFake implements _i2.Response<T1> {
  _FakeResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRx_2<T> extends _i1.SmartFake implements _i3.Rx<T> {
  _FakeRx_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRxString_3 extends _i1.SmartFake implements _i3.RxString {
  _FakeRxString_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInternalFinalCallback_4<T> extends _i1.SmartFake
    implements _i3.InternalFinalCallback<T> {
  _FakeInternalFinalCallback_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAPIService_5 extends _i1.SmartFake implements _i4.APIService {
  _FakeAPIService_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [APIService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAPIService extends _i1.Mock implements _i4.APIService {
  @override
  _i2.Dio get dio => (super.noSuchMethod(
        Invocation.getter(#dio),
        returnValue: _FakeDio_0(
          this,
          Invocation.getter(#dio),
        ),
        returnValueForMissingStub: _FakeDio_0(
          this,
          Invocation.getter(#dio),
        ),
      ) as _i2.Dio);
  @override
  _i5.Future<_i2.Response<T>> get<T>(
    String? url, {
    Map<String, dynamic>? queryParameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#queryParameters: queryParameters},
        ),
        returnValue: _i5.Future<_i2.Response<T>>.value(_FakeResponse_1<T>(
          this,
          Invocation.method(
            #get,
            [url],
            {#queryParameters: queryParameters},
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Response<T>>.value(_FakeResponse_1<T>(
          this,
          Invocation.method(
            #get,
            [url],
            {#queryParameters: queryParameters},
          ),
        )),
      ) as _i5.Future<_i2.Response<T>>);
  @override
  _i5.Future<_i2.Response<T>> getPaginate<T>(
    String? url,
    Map<String, dynamic>? queryParameters,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPaginate,
          [
            url,
            queryParameters,
          ],
        ),
        returnValue: _i5.Future<_i2.Response<T>>.value(_FakeResponse_1<T>(
          this,
          Invocation.method(
            #getPaginate,
            [
              url,
              queryParameters,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Response<T>>.value(_FakeResponse_1<T>(
          this,
          Invocation.method(
            #getPaginate,
            [
              url,
              queryParameters,
            ],
          ),
        )),
      ) as _i5.Future<_i2.Response<T>>);
  @override
  _i5.Future<_i2.Response<T>> post<T>(
    String? url,
    Object? data, {
    Map<String, dynamic>? queryParameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [
            url,
            data,
          ],
          {#queryParameters: queryParameters},
        ),
        returnValue: _i5.Future<_i2.Response<T>>.value(_FakeResponse_1<T>(
          this,
          Invocation.method(
            #post,
            [
              url,
              data,
            ],
            {#queryParameters: queryParameters},
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Response<T>>.value(_FakeResponse_1<T>(
          this,
          Invocation.method(
            #post,
            [
              url,
              data,
            ],
            {#queryParameters: queryParameters},
          ),
        )),
      ) as _i5.Future<_i2.Response<T>>);
  @override
  _i5.Future<_i2.Response<T>> put<T>(
    String? url,
    Object? data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [
            url,
            data,
          ],
        ),
        returnValue: _i5.Future<_i2.Response<T>>.value(_FakeResponse_1<T>(
          this,
          Invocation.method(
            #put,
            [
              url,
              data,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Response<T>>.value(_FakeResponse_1<T>(
          this,
          Invocation.method(
            #put,
            [
              url,
              data,
            ],
          ),
        )),
      ) as _i5.Future<_i2.Response<T>>);
  @override
  _i5.Future<_i2.Response<T>> delete<T>(
    String? url, {
    Map<String, dynamic>? queryParameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {#queryParameters: queryParameters},
        ),
        returnValue: _i5.Future<_i2.Response<T>>.value(_FakeResponse_1<T>(
          this,
          Invocation.method(
            #delete,
            [url],
            {#queryParameters: queryParameters},
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Response<T>>.value(_FakeResponse_1<T>(
          this,
          Invocation.method(
            #delete,
            [url],
            {#queryParameters: queryParameters},
          ),
        )),
      ) as _i5.Future<_i2.Response<T>>);
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i6.AuthService {
  @override
  _i3.Rx<_i7.User?> get firebaseUser => (super.noSuchMethod(
        Invocation.getter(#firebaseUser),
        returnValue: _FakeRx_2<_i7.User?>(
          this,
          Invocation.getter(#firebaseUser),
        ),
        returnValueForMissingStub: _FakeRx_2<_i7.User?>(
          this,
          Invocation.getter(#firebaseUser),
        ),
      ) as _i3.Rx<_i7.User?>);
  @override
  set firebaseUser(_i3.Rx<_i7.User?>? _firebaseUser) => super.noSuchMethod(
        Invocation.setter(
          #firebaseUser,
          _firebaseUser,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.RxString get userToken => (super.noSuchMethod(
        Invocation.getter(#userToken),
        returnValue: _FakeRxString_3(
          this,
          Invocation.getter(#userToken),
        ),
        returnValueForMissingStub: _FakeRxString_3(
          this,
          Invocation.getter(#userToken),
        ),
      ) as _i3.RxString);
  @override
  set userToken(_i3.RxString? _userToken) => super.noSuchMethod(
        Invocation.setter(
          #userToken,
          _userToken,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set timer(_i5.Timer? _timer) => super.noSuchMethod(
        Invocation.setter(
          #timer,
          _timer,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  set isLoading(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #isLoading,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.InternalFinalCallback<void> get onStart => (super.noSuchMethod(
        Invocation.getter(#onStart),
        returnValue: _FakeInternalFinalCallback_4<void>(
          this,
          Invocation.getter(#onStart),
        ),
        returnValueForMissingStub: _FakeInternalFinalCallback_4<void>(
          this,
          Invocation.getter(#onStart),
        ),
      ) as _i3.InternalFinalCallback<void>);
  @override
  _i3.InternalFinalCallback<void> get onDelete => (super.noSuchMethod(
        Invocation.getter(#onDelete),
        returnValue: _FakeInternalFinalCallback_4<void>(
          this,
          Invocation.getter(#onDelete),
        ),
        returnValueForMissingStub: _FakeInternalFinalCallback_4<void>(
          this,
          Invocation.getter(#onDelete),
        ),
      ) as _i3.InternalFinalCallback<void>);
  @override
  bool get initialized => (super.noSuchMethod(
        Invocation.getter(#initialized),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  void onInit() => super.noSuchMethod(
        Invocation.method(
          #onInit,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onClose() => super.noSuchMethod(
        Invocation.method(
          #onClose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<void> initAuthToken() => (super.noSuchMethod(
        Invocation.method(
          #initAuthToken,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> handleEmailVerification() => (super.noSuchMethod(
        Invocation.method(
          #handleEmailVerification,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> handlePasswordReset(String? email) => (super.noSuchMethod(
        Invocation.method(
          #handlePasswordReset,
          [email],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  void onReady() => super.noSuchMethod(
        Invocation.method(
          #onReady,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void $configureLifeCycle() => super.noSuchMethod(
        Invocation.method(
          #$configureLifeCycle,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [PostAPI].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostAPI extends _i1.Mock implements _i8.PostAPI {
  @override
  _i4.APIService get apiService => (super.noSuchMethod(
        Invocation.getter(#apiService),
        returnValue: _FakeAPIService_5(
          this,
          Invocation.getter(#apiService),
        ),
        returnValueForMissingStub: _FakeAPIService_5(
          this,
          Invocation.getter(#apiService),
        ),
      ) as _i4.APIService);
  @override
  _i5.Future<bool> postReview({
    required _i9.ReviewModel? review,
    required String? postId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postReview,
          [],
          {
            #review: review,
            #postId: postId,
          },
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
  @override
  _i5.Future<_i9.ReviewModel?> getReviewById({
    required String? postId,
    required String? reviewId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getReviewById,
          [],
          {
            #postId: postId,
            #reviewId: reviewId,
          },
        ),
        returnValue: _i5.Future<_i9.ReviewModel?>.value(),
        returnValueForMissingStub: _i5.Future<_i9.ReviewModel?>.value(),
      ) as _i5.Future<_i9.ReviewModel?>);
  @override
  _i5.Future<List<_i9.ReviewModel>> getPostReviews(
    String? postId, {
    String? lastSentReviewId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPostReviews,
          [postId],
          {#lastSentReviewId: lastSentReviewId},
        ),
        returnValue:
            _i5.Future<List<_i9.ReviewModel>>.value(<_i9.ReviewModel>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i9.ReviewModel>>.value(<_i9.ReviewModel>[]),
      ) as _i5.Future<List<_i9.ReviewModel>>);
  @override
  _i5.Future<bool> archivePost(String? postId) => (super.noSuchMethod(
        Invocation.method(
          #archivePost,
          [postId],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
  @override
  _i5.Future<bool> unarchivePost(String? postId) => (super.noSuchMethod(
        Invocation.method(
          #unarchivePost,
          [postId],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
  @override
  _i5.Future<bool> updatePost(_i10.PostModel? post) => (super.noSuchMethod(
        Invocation.method(
          #updatePost,
          [post],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
  @override
  _i5.Future<bool> unlikePost({
    required String? userId,
    required String? postId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #unlikePost,
          [],
          {
            #userId: userId,
            #postId: postId,
          },
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
  @override
  _i5.Future<bool> deleteComment({
    required String? postId,
    required String? commentId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteComment,
          [],
          {
            #postId: postId,
            #commentId: commentId,
          },
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
  @override
  _i5.Future<bool> createComment({
    required String? postId,
    required _i11.CommentModel? newComment,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createComment,
          [],
          {
            #postId: postId,
            #newComment: newComment,
          },
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
  @override
  _i5.Future<bool> createReview({
    required String? postId,
    required _i9.ReviewModel? newReview,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createReview,
          [],
          {
            #postId: postId,
            #newReview: newReview,
          },
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
  @override
  _i5.Future<bool> createPost({
    required String? userId,
    required _i10.PostModel? newPost,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createPost,
          [],
          {
            #userId: userId,
            #newPost: newPost,
          },
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
  @override
  _i5.Future<_i12.PostResponse?> getPost(String? postId) => (super.noSuchMethod(
        Invocation.method(
          #getPost,
          [postId],
        ),
        returnValue: _i5.Future<_i12.PostResponse?>.value(),
        returnValueForMissingStub: _i5.Future<_i12.PostResponse?>.value(),
      ) as _i5.Future<_i12.PostResponse?>);
  @override
  _i5.Future<List<_i11.CommentModel>> getComments(
    String? postId, {
    String? lastCommentId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getComments,
          [postId],
          {#lastCommentId: lastCommentId},
        ),
        returnValue:
            _i5.Future<List<_i11.CommentModel>>.value(<_i11.CommentModel>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i11.CommentModel>>.value(<_i11.CommentModel>[]),
      ) as _i5.Future<List<_i11.CommentModel>>);
}
