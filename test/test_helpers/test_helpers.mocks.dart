// Mocks generated by Mockito 5.4.2 from annotations
// in cartisan/test/test_helpers/test_helpers.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:cartisan/app/api_classes/api_service.dart' as _i5;
import 'package:cartisan/app/api_classes/cart_api.dart' as _i14;
import 'package:cartisan/app/api_classes/notifications_api.dart' as _i16;
import 'package:cartisan/app/api_classes/order_api.dart' as _i18;
import 'package:cartisan/app/api_classes/payment_api.dart' as _i22;
import 'package:cartisan/app/api_classes/post_api.dart' as _i9;
import 'package:cartisan/app/api_classes/report_api.dart' as _i23;
import 'package:cartisan/app/api_classes/timeline_api.dart' as _i24;
import 'package:cartisan/app/api_classes/user_api.dart' as _i25;
import 'package:cartisan/app/controllers/auth_service.dart' as _i7;
import 'package:cartisan/app/models/address__model.dart' as _i20;
import 'package:cartisan/app/models/cart_item_model.dart' as _i15;
import 'package:cartisan/app/models/comment_model.dart' as _i12;
import 'package:cartisan/app/models/notification_model.dart' as _i17;
import 'package:cartisan/app/models/order_item_status.dart' as _i21;
import 'package:cartisan/app/models/order_model.dart' as _i19;
import 'package:cartisan/app/models/post_model.dart' as _i11;
import 'package:cartisan/app/models/post_response.dart' as _i13;
import 'package:cartisan/app/models/review_model.dart' as _i10;
import 'package:cartisan/app/models/user_model.dart' as _i26;
import 'package:cartisan/app/services/database.dart' as _i4;
import 'package:dio/dio.dart' as _i2;
import 'package:firebase_auth/firebase_auth.dart' as _i8;
import 'package:get/get.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDio_0 extends _i1.SmartFake implements _i2.Dio {
  _FakeDio_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_1<T1> extends _i1.SmartFake implements _i2.Response<T1> {
  _FakeResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRx_2<T> extends _i1.SmartFake implements _i3.Rx<T> {
  _FakeRx_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabase_3 extends _i1.SmartFake implements _i4.Database {
  _FakeDatabase_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRxString_4 extends _i1.SmartFake implements _i3.RxString {
  _FakeRxString_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInternalFinalCallback_5<T> extends _i1.SmartFake
    implements _i3.InternalFinalCallback<T> {
  _FakeInternalFinalCallback_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAPIService_6 extends _i1.SmartFake implements _i5.APIService {
  _FakeAPIService_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [APIService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAPIService extends _i1.Mock implements _i5.APIService {
  @override
  _i2.Dio get dio => (super.noSuchMethod(
        Invocation.getter(#dio),
        returnValue: _FakeDio_0(
          this,
          Invocation.getter(#dio),
        ),
        returnValueForMissingStub: _FakeDio_0(
          this,
          Invocation.getter(#dio),
        ),
      ) as _i2.Dio);
  @override
  _i6.Future<_i2.Response<T>> get<T>(
    String? url, {
    Map<String, dynamic>? queryParameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#queryParameters: queryParameters},
        ),
        returnValue: _i6.Future<_i2.Response<T>>.value(_FakeResponse_1<T>(
          this,
          Invocation.method(
            #get,
            [url],
            {#queryParameters: queryParameters},
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Response<T>>.value(_FakeResponse_1<T>(
          this,
          Invocation.method(
            #get,
            [url],
            {#queryParameters: queryParameters},
          ),
        )),
      ) as _i6.Future<_i2.Response<T>>);
  @override
  _i6.Future<_i2.Response<T>> getPaginate<T>(
    String? url,
    Map<String, dynamic>? queryParameters,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPaginate,
          [
            url,
            queryParameters,
          ],
        ),
        returnValue: _i6.Future<_i2.Response<T>>.value(_FakeResponse_1<T>(
          this,
          Invocation.method(
            #getPaginate,
            [
              url,
              queryParameters,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Response<T>>.value(_FakeResponse_1<T>(
          this,
          Invocation.method(
            #getPaginate,
            [
              url,
              queryParameters,
            ],
          ),
        )),
      ) as _i6.Future<_i2.Response<T>>);
  @override
  _i6.Future<_i2.Response<T>> post<T>(
    String? url,
    Object? data, {
    Map<String, dynamic>? queryParameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [
            url,
            data,
          ],
          {#queryParameters: queryParameters},
        ),
        returnValue: _i6.Future<_i2.Response<T>>.value(_FakeResponse_1<T>(
          this,
          Invocation.method(
            #post,
            [
              url,
              data,
            ],
            {#queryParameters: queryParameters},
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Response<T>>.value(_FakeResponse_1<T>(
          this,
          Invocation.method(
            #post,
            [
              url,
              data,
            ],
            {#queryParameters: queryParameters},
          ),
        )),
      ) as _i6.Future<_i2.Response<T>>);
  @override
  _i6.Future<_i2.Response<T>> put<T>(
    String? url,
    Object? data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [
            url,
            data,
          ],
        ),
        returnValue: _i6.Future<_i2.Response<T>>.value(_FakeResponse_1<T>(
          this,
          Invocation.method(
            #put,
            [
              url,
              data,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Response<T>>.value(_FakeResponse_1<T>(
          this,
          Invocation.method(
            #put,
            [
              url,
              data,
            ],
          ),
        )),
      ) as _i6.Future<_i2.Response<T>>);
  @override
  _i6.Future<_i2.Response<T>> delete<T>(
    String? url, {
    Map<String, dynamic>? queryParameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {#queryParameters: queryParameters},
        ),
        returnValue: _i6.Future<_i2.Response<T>>.value(_FakeResponse_1<T>(
          this,
          Invocation.method(
            #delete,
            [url],
            {#queryParameters: queryParameters},
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Response<T>>.value(_FakeResponse_1<T>(
          this,
          Invocation.method(
            #delete,
            [url],
            {#queryParameters: queryParameters},
          ),
        )),
      ) as _i6.Future<_i2.Response<T>>);
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i7.AuthService {
  @override
  _i3.Rx<_i8.User?> get firebaseUser => (super.noSuchMethod(
        Invocation.getter(#firebaseUser),
        returnValue: _FakeRx_2<_i8.User?>(
          this,
          Invocation.getter(#firebaseUser),
        ),
        returnValueForMissingStub: _FakeRx_2<_i8.User?>(
          this,
          Invocation.getter(#firebaseUser),
        ),
      ) as _i3.Rx<_i8.User?>);
  @override
  set firebaseUser(_i3.Rx<_i8.User?>? _firebaseUser) => super.noSuchMethod(
        Invocation.setter(
          #firebaseUser,
          _firebaseUser,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Database get db => (super.noSuchMethod(
        Invocation.getter(#db),
        returnValue: _FakeDatabase_3(
          this,
          Invocation.getter(#db),
        ),
        returnValueForMissingStub: _FakeDatabase_3(
          this,
          Invocation.getter(#db),
        ),
      ) as _i4.Database);
  @override
  set db(_i4.Database? _db) => super.noSuchMethod(
        Invocation.setter(
          #db,
          _db,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.RxString get userToken => (super.noSuchMethod(
        Invocation.getter(#userToken),
        returnValue: _FakeRxString_4(
          this,
          Invocation.getter(#userToken),
        ),
        returnValueForMissingStub: _FakeRxString_4(
          this,
          Invocation.getter(#userToken),
        ),
      ) as _i3.RxString);
  @override
  set userToken(_i3.RxString? _userToken) => super.noSuchMethod(
        Invocation.setter(
          #userToken,
          _userToken,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  set isLoading(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #isLoading,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.InternalFinalCallback<void> get onStart => (super.noSuchMethod(
        Invocation.getter(#onStart),
        returnValue: _FakeInternalFinalCallback_5<void>(
          this,
          Invocation.getter(#onStart),
        ),
        returnValueForMissingStub: _FakeInternalFinalCallback_5<void>(
          this,
          Invocation.getter(#onStart),
        ),
      ) as _i3.InternalFinalCallback<void>);
  @override
  _i3.InternalFinalCallback<void> get onDelete => (super.noSuchMethod(
        Invocation.getter(#onDelete),
        returnValue: _FakeInternalFinalCallback_5<void>(
          this,
          Invocation.getter(#onDelete),
        ),
        returnValueForMissingStub: _FakeInternalFinalCallback_5<void>(
          this,
          Invocation.getter(#onDelete),
        ),
      ) as _i3.InternalFinalCallback<void>);
  @override
  bool get initialized => (super.noSuchMethod(
        Invocation.getter(#initialized),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  void onInit() => super.noSuchMethod(
        Invocation.method(
          #onInit,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onClose() => super.noSuchMethod(
        Invocation.method(
          #onClose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.Future<void> initAuthToken() => (super.noSuchMethod(
        Invocation.method(
          #initAuthToken,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> handleEmailVerification() => (super.noSuchMethod(
        Invocation.method(
          #handleEmailVerification,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> handlePasswordReset(String? email) => (super.noSuchMethod(
        Invocation.method(
          #handlePasswordReset,
          [email],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  void onReady() => super.noSuchMethod(
        Invocation.method(
          #onReady,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void $configureLifeCycle() => super.noSuchMethod(
        Invocation.method(
          #$configureLifeCycle,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [PostAPI].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostAPI extends _i1.Mock implements _i9.PostAPI {
  @override
  _i5.APIService get apiService => (super.noSuchMethod(
        Invocation.getter(#apiService),
        returnValue: _FakeAPIService_6(
          this,
          Invocation.getter(#apiService),
        ),
        returnValueForMissingStub: _FakeAPIService_6(
          this,
          Invocation.getter(#apiService),
        ),
      ) as _i5.APIService);
  @override
  _i6.Future<bool> postReview({
    required _i10.ReviewModel? review,
    required String? postId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postReview,
          [],
          {
            #review: review,
            #postId: postId,
          },
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<_i10.ReviewModel?> getReviewById({
    required String? postId,
    required String? reviewId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getReviewById,
          [],
          {
            #postId: postId,
            #reviewId: reviewId,
          },
        ),
        returnValue: _i6.Future<_i10.ReviewModel?>.value(),
        returnValueForMissingStub: _i6.Future<_i10.ReviewModel?>.value(),
      ) as _i6.Future<_i10.ReviewModel?>);
  @override
  _i6.Future<List<_i10.ReviewModel>> getPostReviews(
    String? postId, {
    String? lastSentReviewId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPostReviews,
          [postId],
          {#lastSentReviewId: lastSentReviewId},
        ),
        returnValue:
            _i6.Future<List<_i10.ReviewModel>>.value(<_i10.ReviewModel>[]),
        returnValueForMissingStub:
            _i6.Future<List<_i10.ReviewModel>>.value(<_i10.ReviewModel>[]),
      ) as _i6.Future<List<_i10.ReviewModel>>);
  @override
  _i6.Future<bool> archivePost(String? postId) => (super.noSuchMethod(
        Invocation.method(
          #archivePost,
          [postId],
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<bool> unarchivePost(String? postId) => (super.noSuchMethod(
        Invocation.method(
          #unarchivePost,
          [postId],
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<bool> updatePost(_i11.PostModel? post) => (super.noSuchMethod(
        Invocation.method(
          #updatePost,
          [post],
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<bool> unlikePost({
    required String? userId,
    required String? postId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #unlikePost,
          [],
          {
            #userId: userId,
            #postId: postId,
          },
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<bool> deleteComment({
    required String? postId,
    required String? commentId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteComment,
          [],
          {
            #postId: postId,
            #commentId: commentId,
          },
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<bool> createComment({
    required String? postId,
    required _i12.CommentModel? newComment,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createComment,
          [],
          {
            #postId: postId,
            #newComment: newComment,
          },
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<bool> createReview({
    required String? postId,
    required _i10.ReviewModel? newReview,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createReview,
          [],
          {
            #postId: postId,
            #newReview: newReview,
          },
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<bool> createPost({
    required String? userId,
    required _i11.PostModel? newPost,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createPost,
          [],
          {
            #userId: userId,
            #newPost: newPost,
          },
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<_i13.PostResponse?> getPost(String? postId) => (super.noSuchMethod(
        Invocation.method(
          #getPost,
          [postId],
        ),
        returnValue: _i6.Future<_i13.PostResponse?>.value(),
        returnValueForMissingStub: _i6.Future<_i13.PostResponse?>.value(),
      ) as _i6.Future<_i13.PostResponse?>);
  @override
  _i6.Future<List<_i12.CommentModel>> getComments(
    String? postId, {
    String? lastCommentId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getComments,
          [postId],
          {#lastCommentId: lastCommentId},
        ),
        returnValue:
            _i6.Future<List<_i12.CommentModel>>.value(<_i12.CommentModel>[]),
        returnValueForMissingStub:
            _i6.Future<List<_i12.CommentModel>>.value(<_i12.CommentModel>[]),
      ) as _i6.Future<List<_i12.CommentModel>>);
}

/// A class which mocks [CartAPI].
///
/// See the documentation for Mockito's code generation for more information.
class MockCartAPI extends _i1.Mock implements _i14.CartAPI {
  @override
  _i5.APIService get apiService => (super.noSuchMethod(
        Invocation.getter(#apiService),
        returnValue: _FakeAPIService_6(
          this,
          Invocation.getter(#apiService),
        ),
        returnValueForMissingStub: _FakeAPIService_6(
          this,
          Invocation.getter(#apiService),
        ),
      ) as _i5.APIService);
  @override
  set apiService(_i5.APIService? _apiService) => super.noSuchMethod(
        Invocation.setter(
          #apiService,
          _apiService,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.Future<List<_i11.PostModel>> getPostsFromCart(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPostsFromCart,
          [userId],
        ),
        returnValue: _i6.Future<List<_i11.PostModel>>.value(<_i11.PostModel>[]),
        returnValueForMissingStub:
            _i6.Future<List<_i11.PostModel>>.value(<_i11.PostModel>[]),
      ) as _i6.Future<List<_i11.PostModel>>);
  @override
  _i6.Future<List<_i15.CartItemModel>> getCart(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCart,
          [userId],
        ),
        returnValue:
            _i6.Future<List<_i15.CartItemModel>>.value(<_i15.CartItemModel>[]),
        returnValueForMissingStub:
            _i6.Future<List<_i15.CartItemModel>>.value(<_i15.CartItemModel>[]),
      ) as _i6.Future<List<_i15.CartItemModel>>);
  @override
  _i6.Future<bool> addToCart({
    required String? postId,
    required String? userId,
    required String? selectedVariant,
    required int? quantity,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addToCart,
          [],
          {
            #postId: postId,
            #userId: userId,
            #selectedVariant: selectedVariant,
            #quantity: quantity,
          },
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<bool> setCartItemCount({
    required String? userId,
    required String? cartItemId,
    required int? amount,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCartItemCount,
          [],
          {
            #userId: userId,
            #cartItemId: cartItemId,
            #amount: amount,
          },
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<bool> deleteCartItem({
    required String? cartItemId,
    required String? userId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteCartItem,
          [],
          {
            #cartItemId: cartItemId,
            #userId: userId,
          },
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<bool> clearCart(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #clearCart,
          [userId],
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
}

/// A class which mocks [NotificationsAPI].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotificationsAPI extends _i1.Mock implements _i16.NotificationsAPI {
  @override
  _i5.APIService get apiService => (super.noSuchMethod(
        Invocation.getter(#apiService),
        returnValue: _FakeAPIService_6(
          this,
          Invocation.getter(#apiService),
        ),
        returnValueForMissingStub: _FakeAPIService_6(
          this,
          Invocation.getter(#apiService),
        ),
      ) as _i5.APIService);
  @override
  _i6.Future<List<_i17.NotificationModel>> getNotifications({
    required String? userId,
    String? lastSentNotificationId,
    int? limit,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNotifications,
          [],
          {
            #userId: userId,
            #lastSentNotificationId: lastSentNotificationId,
            #limit: limit,
          },
        ),
        returnValue: _i6.Future<List<_i17.NotificationModel>>.value(
            <_i17.NotificationModel>[]),
        returnValueForMissingStub:
            _i6.Future<List<_i17.NotificationModel>>.value(
                <_i17.NotificationModel>[]),
      ) as _i6.Future<List<_i17.NotificationModel>>);
  @override
  _i6.Future<bool> clearNotifications(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #clearNotifications,
          [userId],
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
}

/// A class which mocks [OrderAPI].
///
/// See the documentation for Mockito's code generation for more information.
class MockOrderAPI extends _i1.Mock implements _i18.OrderAPI {
  @override
  _i5.APIService get apiService => (super.noSuchMethod(
        Invocation.getter(#apiService),
        returnValue: _FakeAPIService_6(
          this,
          Invocation.getter(#apiService),
        ),
        returnValueForMissingStub: _FakeAPIService_6(
          this,
          Invocation.getter(#apiService),
        ),
      ) as _i5.APIService);
  @override
  _i6.Future<List<_i19.OrderModel>> getPurchasedOrders(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPurchasedOrders,
          [userId],
        ),
        returnValue:
            _i6.Future<List<_i19.OrderModel>>.value(<_i19.OrderModel>[]),
        returnValueForMissingStub:
            _i6.Future<List<_i19.OrderModel>>.value(<_i19.OrderModel>[]),
      ) as _i6.Future<List<_i19.OrderModel>>);
  @override
  _i6.Future<List<_i19.OrderModel>> getSoldOrders(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSoldOrders,
          [userId],
        ),
        returnValue:
            _i6.Future<List<_i19.OrderModel>>.value(<_i19.OrderModel>[]),
        returnValueForMissingStub:
            _i6.Future<List<_i19.OrderModel>>.value(<_i19.OrderModel>[]),
      ) as _i6.Future<List<_i19.OrderModel>>);
  @override
  _i6.Future<_i19.OrderModel?> newOrder(_i20.AddressModel? address) =>
      (super.noSuchMethod(
        Invocation.method(
          #newOrder,
          [address],
        ),
        returnValue: _i6.Future<_i19.OrderModel?>.value(),
        returnValueForMissingStub: _i6.Future<_i19.OrderModel?>.value(),
      ) as _i6.Future<_i19.OrderModel?>);
  @override
  _i6.Future<bool> updateOrderStatus({
    required String? orderId,
    required _i21.OrderItemStatus? newSatus,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateOrderStatus,
          [],
          {
            #orderId: orderId,
            #newSatus: newSatus,
          },
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<bool> updateOrderItemStatus({
    required String? orderId,
    required String? orderItemId,
    required _i21.OrderItemStatus? newStatus,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateOrderItemStatus,
          [],
          {
            #orderId: orderId,
            #orderItemId: orderItemId,
            #newStatus: newStatus,
          },
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<bool> cancelOrder(String? orderId) => (super.noSuchMethod(
        Invocation.method(
          #cancelOrder,
          [orderId],
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<_i19.OrderModel?> getOrder(String? orderId) => (super.noSuchMethod(
        Invocation.method(
          #getOrder,
          [orderId],
        ),
        returnValue: _i6.Future<_i19.OrderModel?>.value(),
        returnValueForMissingStub: _i6.Future<_i19.OrderModel?>.value(),
      ) as _i6.Future<_i19.OrderModel?>);
}

/// A class which mocks [PaymentAPI].
///
/// See the documentation for Mockito's code generation for more information.
class MockPaymentAPI extends _i1.Mock implements _i22.PaymentAPI {
  @override
  _i5.APIService get apiService => (super.noSuchMethod(
        Invocation.getter(#apiService),
        returnValue: _FakeAPIService_6(
          this,
          Invocation.getter(#apiService),
        ),
        returnValueForMissingStub: _FakeAPIService_6(
          this,
          Invocation.getter(#apiService),
        ),
      ) as _i5.APIService);
  @override
  _i6.Future<String> getDashboardLink(String? sellerId) => (super.noSuchMethod(
        Invocation.method(
          #getDashboardLink,
          [sellerId],
        ),
        returnValue: _i6.Future<String>.value(''),
        returnValueForMissingStub: _i6.Future<String>.value(''),
      ) as _i6.Future<String>);
  @override
  _i6.Future<bool> isStripeSetupComplete(String? sellerId) =>
      (super.noSuchMethod(
        Invocation.method(
          #isStripeSetupComplete,
          [sellerId],
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<String> createAccount({
    required String? email,
    required String? businessType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createAccount,
          [],
          {
            #email: email,
            #businessType: businessType,
          },
        ),
        returnValue: _i6.Future<String>.value(''),
        returnValueForMissingStub: _i6.Future<String>.value(''),
      ) as _i6.Future<String>);
  @override
  _i6.Future<bool> deleteAccount({
    required String? sellerId,
    required String? userId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAccount,
          [],
          {
            #sellerId: sellerId,
            #userId: userId,
          },
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<bool> cancelAndRefund({
    required String? orderId,
    required String? orderItemId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #cancelAndRefund,
          [],
          {
            #orderId: orderId,
            #orderItemId: orderItemId,
          },
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<Map<String, dynamic>> getPaymentIntent(
    String? orderId, {
    String? currency,
    int? appFeeInCents,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPaymentIntent,
          [orderId],
          {
            #currency: currency,
            #appFeeInCents: appFeeInCents,
          },
        ),
        returnValue:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i6.Future<Map<String, dynamic>>);
}

/// A class which mocks [ReportAPI].
///
/// See the documentation for Mockito's code generation for more information.
class MockReportAPI extends _i1.Mock implements _i23.ReportAPI {
  @override
  _i5.APIService get apiService => (super.noSuchMethod(
        Invocation.getter(#apiService),
        returnValue: _FakeAPIService_6(
          this,
          Invocation.getter(#apiService),
        ),
        returnValueForMissingStub: _FakeAPIService_6(
          this,
          Invocation.getter(#apiService),
        ),
      ) as _i5.APIService);
  @override
  _i6.Future<bool> reportUser({
    required String? reportedId,
    required String? reportedFor,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #reportUser,
          [],
          {
            #reportedId: reportedId,
            #reportedFor: reportedFor,
          },
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<bool> reportPost({
    required _i11.PostModel? post,
    required String? reportedFor,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #reportPost,
          [],
          {
            #post: post,
            #reportedFor: reportedFor,
          },
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
}

/// A class which mocks [TimelineAPI].
///
/// See the documentation for Mockito's code generation for more information.
class MockTimelineAPI extends _i1.Mock implements _i24.TimelineAPI {
  @override
  _i5.APIService get apiService => (super.noSuchMethod(
        Invocation.getter(#apiService),
        returnValue: _FakeAPIService_6(
          this,
          Invocation.getter(#apiService),
        ),
        returnValueForMissingStub: _FakeAPIService_6(
          this,
          Invocation.getter(#apiService),
        ),
      ) as _i5.APIService);
  @override
  set apiService(_i5.APIService? _apiService) => super.noSuchMethod(
        Invocation.setter(
          #apiService,
          _apiService,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.Future<List<_i13.PostResponse>> fetchTimelinePosts({
    required String? uid,
    String? lastPostId,
    int? count = 10,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchTimelinePosts,
          [],
          {
            #uid: uid,
            #lastPostId: lastPostId,
            #count: count,
          },
        ),
        returnValue:
            _i6.Future<List<_i13.PostResponse>>.value(<_i13.PostResponse>[]),
        returnValueForMissingStub:
            _i6.Future<List<_i13.PostResponse>>.value(<_i13.PostResponse>[]),
      ) as _i6.Future<List<_i13.PostResponse>>);
}

/// A class which mocks [UserAPI].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserAPI extends _i1.Mock implements _i25.UserAPI {
  @override
  _i5.APIService get apiService => (super.noSuchMethod(
        Invocation.getter(#apiService),
        returnValue: _FakeAPIService_6(
          this,
          Invocation.getter(#apiService),
        ),
        returnValueForMissingStub: _FakeAPIService_6(
          this,
          Invocation.getter(#apiService),
        ),
      ) as _i5.APIService);
  @override
  set apiService(_i5.APIService? _apiService) => super.noSuchMethod(
        Invocation.setter(
          #apiService,
          _apiService,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.Future<_i26.UserModel?> getUser(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [userId],
        ),
        returnValue: _i6.Future<_i26.UserModel?>.value(),
        returnValueForMissingStub: _i6.Future<_i26.UserModel?>.value(),
      ) as _i6.Future<_i26.UserModel?>);
  @override
  _i6.Future<bool> deleteAddress({
    required String? userId,
    required String? addressId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAddress,
          [],
          {
            #userId: userId,
            #addressId: addressId,
          },
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<bool> updateAddress({
    required String? userId,
    required String? addressId,
    required _i20.AddressModel? address,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAddress,
          [],
          {
            #userId: userId,
            #addressId: addressId,
            #address: address,
          },
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<List<_i20.AddressModel>> getAllUserAddresses(String? uid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllUserAddresses,
          [uid],
        ),
        returnValue:
            _i6.Future<List<_i20.AddressModel>>.value(<_i20.AddressModel>[]),
        returnValueForMissingStub:
            _i6.Future<List<_i20.AddressModel>>.value(<_i20.AddressModel>[]),
      ) as _i6.Future<List<_i20.AddressModel>>);
  @override
  _i6.Future<int> getUserPostCount(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #getUserPostCount,
          [userId],
        ),
        returnValue: _i6.Future<int>.value(0),
        returnValueForMissingStub: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);
  @override
  _i6.Future<List<_i11.PostModel>> getAllUserPosts(
    String? userId, {
    String? lastPostId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllUserPosts,
          [userId],
          {#lastPostId: lastPostId},
        ),
        returnValue: _i6.Future<List<_i11.PostModel>>.value(<_i11.PostModel>[]),
        returnValueForMissingStub:
            _i6.Future<List<_i11.PostModel>>.value(<_i11.PostModel>[]),
      ) as _i6.Future<List<_i11.PostModel>>);
  @override
  _i6.Future<bool> createUser({
    required String? userId,
    required _i26.UserModel? user,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUser,
          [],
          {
            #userId: userId,
            #user: user,
          },
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<bool> updateDeliveryInfo({
    required String? userId,
    required Map<String, dynamic>? newDelivery,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDeliveryInfo,
          [],
          {
            #userId: userId,
            #newDelivery: newDelivery,
          },
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<bool> updateUserDetails({
    required String? userId,
    required _i26.UserModel? newUser,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserDetails,
          [],
          {
            #userId: userId,
            #newUser: newUser,
          },
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<bool> addAddress({
    required String? userId,
    required _i20.AddressModel? newAddress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addAddress,
          [],
          {
            #userId: userId,
            #newAddress: newAddress,
          },
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<bool> updateArea({
    required String? userId,
    required Map<String, dynamic>? newAreaMap,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateArea,
          [],
          {
            #userId: userId,
            #newAreaMap: newAreaMap,
          },
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
}
